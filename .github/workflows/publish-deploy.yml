name: publish & deploy

on:
  push:
    tags:
      - "v*"

jobs:
  publish_image:
    name: Build and push akatsuki image
    runs-on: ubuntu-latest
    outputs:
      img_tag: ${{ steps.tag.outputs.img_tag }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Remove 'v' from tag
        id: tag
        env:
          github_ref: ${{ github.ref }}
        run: |
          github_ref=${github_ref##*/}
          github_ref=${github_ref/v/}
          echo "IMG_TAG=${github_ref}" >> $GITHUB_ENV
          echo "img_tag=${github_ref}" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Auth gcloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
      - name: Setup docker
        run: |
          gcloud --quiet auth configure-docker
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./build/package/Dockerfile
          push: true
          tags: |
            rl404/akatsuki:latest
            rl404/akatsuki:${{ env.IMG_TAG }}
            ghcr.io/rl404/akatsuki:latest
            ghcr.io/rl404/akatsuki:${{ env.IMG_TAG }}
            ${{ secrets.GCR_HOSTNAME }}/${{ secrets.GCP_PROJECT_ID }}/akatsuki:${{ env.IMG_TAG }}
  deploy:
    name: Deploy
    needs: publish_image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./deployment/terraform
    steps:
      - uses: actions/checkout@v4
      - name: Auth gcloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Setup Terraform Variables
        run: |-
          cat > pipeline.auto.tfvars <<EOF
          gcp_project_id                = "${{ secrets.GCP_PROJECT_ID }}"
          gcp_region                    = "${{ secrets.GCP_REGION }}"
          gke_cluster_name              = "${{ secrets.GKE_CLUSTER_NAME }}"
          gke_location                  = "${{ secrets.GKE_LOCATION }}"
          gke_pool_name                 = "${{ secrets.GKE_POOL_NAME }}"
          gke_node_preemptible          = "${{ secrets.GKE_NODE_PREEMPTIBLE }}"
          gke_node_machine_type         = "${{ secrets.GKE_NODE_MACHINE_TYPE }}"
          gke_node_disk_size_gb         = "${{ secrets.GKE_NODE_DISK_SIZE_GB }}"
          gcr_image_name                = "${{ secrets.GCR_HOSTNAME }}/${{ secrets.GCP_PROJECT_ID }}/akatsuki:${{ needs.publish_image.outputs.img_tag }}"
          gke_deployment_consumer_name  = "${{ secrets.GKE_DEPLOYMENT_CONSUMER_NAME }}"
          gke_cron_fill_name            = "${{ secrets.GKE_CRON_FILL_NAME }}"
          gke_cron_fill_schedule        = "${{ secrets.GKE_CRON_FILL_SCHEDULE }}"
          gke_cron_update_name          = "${{ secrets.GKE_CRON_UPDATE_NAME }}"
          gke_cron_update_schedule      = "${{ secrets.GKE_CRON_UPDATE_SCHEDULE }}"
          cloud_run_name                = "${{ secrets.CLOUD_RUN_NAME }}"
          cloud_run_location            = "${{ secrets.CLOUD_RUN_LOCATION }}"
          akatsuki_grpc_port            = "${{ secrets.AKATSUKI_GRPC_PORT }}"
          akatsuki_cache_dialect        = "${{ secrets.AKATSUKI_CACHE_DIALECT }}"
          akatsuki_cache_address        = "${{ secrets.AKATSUKI_CACHE_ADDRESS }}"
          akatsuki_cache_password       = "${{ secrets.AKATSUKI_CACHE_PASSWORD }}"
          akatsuki_cache_time           = "${{ secrets.AKATSUKI_CACHE_TIME }}"
          akatsuki_db_dialect           = "${{ secrets.AKATSUKI_DB_DIALECT }}"
          akatsuki_db_address           = "${{ secrets.AKATSUKI_DB_ADDRESS }}"
          akatsuki_db_name              = "${{ secrets.AKATSUKI_DB_NAME }}"
          akatsuki_db_user              = "${{ secrets.AKATSUKI_DB_USER }}"
          akatsuki_db_password          = "${{ secrets.AKATSUKI_DB_PASSWORD }}"
          akatsuki_pubsub_dialect       = "${{ secrets.AKATSUKI_PUBSUB_DIALECT }}"
          akatsuki_pubsub_address       = "${{ secrets.AKATSUKI_PUBSUB_ADDRESS }}"
          akatsuki_pubsub_password      = "${{ secrets.AKATSUKI_PUBSUB_PASSWORD }}"
          akatsuki_mal_client_id        = "${{ secrets.AKATSUKI_MAL_CLIENT_ID }}"
          akatsuki_cron_update_limit    = "${{ secrets.AKATSUKI_CRON_UPDATE_LIMIT }}"
          akatsuki_cron_fill_limit      = "${{ secrets.AKATSUKI_CRON_FILL_LIMIT }}"
          akatsuki_cron_releasing_age   = "${{ secrets.AKATSUKI_CRON_RELEASING_AGE }}"
          akatsuki_cron_finished_age    = "${{ secrets.AKATSUKI_CRON_FINISHED_AGE }}"
          akatsuki_cron_not_yet_age     = "${{ secrets.AKATSUKI_CRON_NOT_YET_AGE }}"
          akatsuki_cron_user_anime_age  = "${{ secrets.AKATSUKI_CRON_USER_ANIME_AGE }}"
          akatsuki_log_json             = "${{ secrets.AKATSUKI_LOG_JSON }}"
          akatsuki_log_level            = "${{ secrets.AKATSUKI_LOG_LEVEL }}"
          akatsuki_newrelic_license_key = "${{ secrets.AKATSUKI_NEWRELIC_LICENSE_KEY }}"
          EOF
      - name: Init Terraform
        run: terraform init -backend-config "bucket=${{ secrets.GCS_BUCKET }}"
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      - name: Format Terraform
        run: terraform fmt -check
      - name: Plan Terraform
        run: terraform plan -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      - name: Apply Terraform
        run: terraform apply -auto-approve -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
