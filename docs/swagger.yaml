basePath: /
definitions:
  service.Anime:
    properties:
      alternative_titles:
        $ref: '#/definitions/service.alternativeTitle'
      background:
        type: string
      broadcast:
        $ref: '#/definitions/service.broadcast'
      end_date:
        $ref: '#/definitions/service.date'
      episode:
        $ref: '#/definitions/service.episode'
      genres:
        items:
          $ref: '#/definitions/service.genre'
        type: array
      id:
        type: integer
      mean:
        type: number
      member:
        type: integer
      nsfw:
        type: boolean
      picture:
        type: string
      pictures:
        items:
          type: string
        type: array
      popularity:
        type: integer
      rank:
        type: integer
      rating:
        type: string
      related:
        items:
          $ref: '#/definitions/service.related'
        type: array
      season:
        $ref: '#/definitions/service.season'
      source:
        type: string
      start_date:
        $ref: '#/definitions/service.date'
      stats:
        $ref: '#/definitions/service.stats'
      status:
        type: string
      studios:
        items:
          $ref: '#/definitions/service.studio'
        type: array
      synopsis:
        type: string
      title:
        type: string
      type:
        type: string
      updated_at:
        type: string
      voter:
        type: integer
    type: object
  service.AnimeHistory:
    properties:
      mean:
        type: number
      member:
        type: integer
      month:
        type: integer
      popularity:
        type: integer
      rank:
        type: integer
      user_completed:
        type: integer
      user_dropped:
        type: integer
      user_on_hold:
        type: integer
      user_planned:
        type: integer
      user_watching:
        type: integer
      voter:
        type: integer
      week:
        type: integer
      year:
        type: integer
    type: object
  service.Genre:
    properties:
      count:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  service.Pagination:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  service.Studio:
    properties:
      count:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  service.UserAnime:
    properties:
      anime_id:
        type: integer
      comment:
        type: string
      episode:
        type: integer
      score:
        type: integer
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      updated_at:
        type: string
    type: object
  service.UserAnimeRelation:
    properties:
      links:
        items:
          $ref: '#/definitions/service.userAnimeRelationLink'
        type: array
      nodes:
        items:
          $ref: '#/definitions/service.userAnimeRelationNode'
        type: array
    type: object
  service.alternativeTitle:
    properties:
      english:
        type: string
      japanese:
        type: string
      synonyms:
        items:
          type: string
        type: array
    type: object
  service.broadcast:
    properties:
      day:
        type: string
      time:
        type: string
    type: object
  service.date:
    properties:
      day:
        type: integer
      month:
        type: integer
      year:
        type: integer
    type: object
  service.episode:
    properties:
      count:
        type: integer
      duration:
        type: integer
    type: object
  service.genre:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  service.related:
    properties:
      id:
        type: integer
      picture:
        type: string
      relation:
        type: string
      title:
        type: string
    type: object
  service.season:
    properties:
      season:
        type: string
      year:
        type: integer
    type: object
  service.stats:
    properties:
      status:
        $ref: '#/definitions/service.statsStatus'
    type: object
  service.statsStatus:
    properties:
      completed:
        type: integer
      dropped:
        type: integer
      on_hold:
        type: integer
      planned:
        type: integer
      watching:
        type: integer
    type: object
  service.studio:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  service.userAnimeRelationLink:
    properties:
      anime_id1:
        type: integer
      anime_id2:
        type: integer
      relation:
        type: string
    type: object
  service.userAnimeRelationNode:
    properties:
      anime_id:
        type: integer
      episode_count:
        type: integer
      episode_duration:
        type: integer
      score:
        type: number
      season:
        type: string
      season_year:
        type: integer
      source:
        type: string
      start_year:
        type: integer
      status:
        type: string
      title:
        type: string
      type:
        type: string
      user_anime_score:
        type: integer
      user_anime_status:
        type: string
      user_episode_count:
        type: integer
    type: object
  utils.Response:
    properties:
      data:
        type: object
      message:
        type: string
      meta:
        type: object
      status:
        type: integer
    type: object
info:
  contact: {}
  description: Akatsuki API.
  title: Akatsuki API
paths:
  /anime:
    get:
      parameters:
      - description: title
        in: query
        name: title
        type: string
      - description: nsfw
        enum:
        - "true"
        - "false"
        in: query
        name: nsfw
        type: string
      - description: type
        enum:
        - TV
        - OVA
        - ONA
        - MOVIE
        - SPECIAL
        - MUSIC
        in: query
        name: type
        type: string
      - description: status
        enum:
        - FINISHED
        - RELEASING
        - NOT_YET
        in: query
        name: status
        type: string
      - description: season
        enum:
        - WINTER
        - SPRING
        - SUMMER
        - FALL
        in: query
        name: season
        type: string
      - description: season year
        in: query
        name: season_year
        type: integer
      - description: start mean
        in: query
        name: start_mean
        type: number
      - description: end mean
        in: query
        name: end_mean
        type: number
      - default: RANK
        description: sort
        enum:
        - ID
        - -ID
        - TITLE
        - -TITLE
        - START_DATE
        - -START_DATE
        - MEAN
        - -MEAN
        - RANK
        - -RANK
        - POPULARITY
        - -POPULARITY
        - MEMBER
        - -MEMBER
        - VOTER
        - -VOTER
        in: query
        name: sort
        type: string
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 20
        description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.Anime'
                  type: array
                meta:
                  $ref: '#/definitions/service.Pagination'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get anime list.
      tags:
      - Anime
  /anime/{animeID}:
    get:
      parameters:
      - description: anime id
        in: path
        name: animeID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.Anime'
              type: object
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get anime by id.
      tags:
      - Anime
  /anime/{animeID}/history:
    get:
      parameters:
      - description: anime id
        in: path
        name: animeID
        required: true
        type: integer
      - description: start date (yyyy-mm-dd)
        in: query
        name: start_date
        type: string
      - description: end date (yyyy-mm-dd)
        in: query
        name: end_date
        type: string
      - default: MONTHLY
        description: group
        enum:
        - WEEKLY
        - MONTHLY
        - YEARLY
        in: query
        name: group
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.AnimeHistory'
                  type: array
              type: object
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get anime stats histories by id.
      tags:
      - Anime
  /anime/{animeID}/update:
    post:
      parameters:
      - description: anime id
        in: path
        name: animeID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Update anime by id.
      tags:
      - Anime
  /genres:
    get:
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 20
        description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.Genre'
                  type: array
                meta:
                  $ref: '#/definitions/service.Pagination'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get genre list.
      tags:
      - Genre
  /genres/{genreID}:
    get:
      parameters:
      - description: genre id
        in: path
        name: genreID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.Genre'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get genre by id.
      tags:
      - Genre
  /studios:
    get:
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 20
        description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.Studio'
                  type: array
                meta:
                  $ref: '#/definitions/service.Pagination'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get studio list.
      tags:
      - Studio
  /studios/{studioID}:
    get:
      parameters:
      - description: studio id
        in: path
        name: studioID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.Studio'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get studio by id.
      tags:
      - Studio
  /user/{username}/anime:
    get:
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 20
        description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.UserAnime'
                  type: array
                meta:
                  $ref: '#/definitions/service.Pagination'
              type: object
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get user's anime.
      tags:
      - User Anime
  /user/{username}/anime/relations:
    get:
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.UserAnimeRelation'
              type: object
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get user's anime relations.
      tags:
      - User Anime
  /user/{username}/update:
    post:
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Update user's anime.
      tags:
      - User Anime
schemes:
- http
- https
swagger: "2.0"
